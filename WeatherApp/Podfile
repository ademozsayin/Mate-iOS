# frozen_string_literal: true

require 'cocoapods-catalyst-support'

# For security reasons, please always keep the wordpress-mobile source first and the CDN second.
install! 'cocoapods', warn_for_multiple_pod_sources: false

source 'https://cdn.cocoapods.org/'

raise 'Please run CocoaPods via `bundle exec`' unless %w[BUNDLE_BIN_PATH BUNDLE_GEMFILE].any? { |k| ENV.key?(k) }

inhibit_all_warnings!
use_frameworks! # Defaulting to use_frameworks! See pre_install hook below for static linking.
use_modular_headers!

app_ios_deployment_target = Gem::Version.new('15.0')

workspace 'WeatherApp.xcworkspace'

## Pods shared between all the targets
## =====================================

def hud
  pod 'SVProgressHUD', :git => 'https://github.com/SVProgressHUD/SVProgressHUD.git'
end

def keychain
  pod 'KeychainAccess'
end

def alamofire
  pod 'Alamofire', git: 'https://github.com/Alamofire/Alamofire.git', tag: '5.9.0'

end

def cocoa_lumberjack
  pod 'CocoaLumberjack'
  pod 'CocoaLumberjack/Swift'
end

def networking_pods
  alamofire
  cocoa_lumberjack

  pod 'Sourcery', '~> 1.0.3', configuration: 'Debug'

  # Used for storing application password
  keychain
end

# Main Target!
# ============
#

target 'WeatherApp' do
  project 'WeatherApp.xcodeproj'

  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!

  # Pods for WeatherApp
  # External Libraries
  # ==================
  #
  alamofire
  cocoa_lumberjack
  keychain
  hud
  pod 'Kingfisher', '~> 7.6.2'
  pod 'Wormholy', '~> 1.6.6', configurations: ['Debug']

  target 'WeatherAppTests' do
    inherit! :search_paths
    # Pods for testing
  end

  target 'WeatherAppUITests' do
    # Pods for testing
  end

end

# Redux Layer:
# ===============
#
def redux_pods
  alamofire
  cocoa_lumberjack
  networking_pods

end

# Redux Target:
# ================
#
target 'Redux' do
  project '../Redux/Redux.xcodeproj'
  redux_pods
end

# Unit Tests
# ==========
#
target 'ReduxTests' do
  project '../Redux/Redux.xcodeproj'
  redux_pods
end


# Networking Target:
# ==================
#
target 'Networking' do
  project '../Networking/Networking.xcodeproj'
  networking_pods
end

# Unit Tests
# ==========
#
target 'NetworkingTests' do
  project '../Networking/Networking.xcodeproj'
end

# Components Target:
# ==================
#
target 'Components' do
  project '../Components/Components.xcodeproj'
  hud
  alamofire
end

# Unit Tests
# ==========
#
target 'ComponentsTests' do
  project '../Components/Components.xcodeproj'
end


# Storage Layer:
# ==============
#
def storage_pods
  cocoa_lumberjack
end

# Storage Target:
# ===============
#
target 'Storage' do
  project '../Storage/Storage.xcodeproj'
  storage_pods
end

# Unit Tests
# ==========
#
target 'StorageTests' do
  project '../Storage/Storage.xcodeproj'
  storage_pods
end

# OnsaFoundation Layer:
# ===============
#
def onsafoundation_pods
  cocoa_lumberjack
end

# Tools Target:
# ================
#
target 'OnsaFoundation' do
  project '../OnsaFoundation/OnsaFoundation.xcodeproj'
  onsafoundation_pods
end

# Unit Tests
# ==========
#
target 'OnsaFoundationTests' do
  project '../OnsaFoundation/OnsaFoundation.xcodeproj'
  onsafoundation_pods
end

# Static Frameworks:
# ============
#
# Make all pods that are not shared across multiple targets into static frameworks by overriding the static_framework? function to return true
# Linking the shared frameworks statically would lead to duplicate symbols
# A future version of CocoaPods may make this easier to do. See https://github.com/CocoaPods/CocoaPods/issues/7428
shared_targets = %w[Networking LocationService Components Redux Storage]
# Statically linking Sentry results in a conflict with `NSDictionary.objectAtKeyPath`, but dynamically
# linking it resolves this.
dynamic_pods = ['Sentry']
pre_install do |installer|
  static = []
  dynamic = []
  installer.pod_targets.each do |pod|
    # If this pod is a dependency of one of our shared targets or its explicitly excluded, it must be linked dynamically
    if pod.target_definitions.any? { |t| shared_targets.include? t.name } || dynamic_pods.include?(pod.name)
      dynamic << pod
      next
    end
    static << pod
    def pod.static_framework?
      true
    end
  end

  puts "Installing #{static.count} pods as static frameworks"
  puts "Installing #{dynamic.count} pods as dynamic frameworks"

  # Force CocoaLumberjack Swift version
  installer.analysis_result.specifications.each do |s|
    s.swift_version = '5.0' if s.name == 'CocoaLumberjack'
  end
end

# Configure your macCatalyst dependencies
catalyst_configuration do
  # Uncomment the next line for a verbose output
  # verbose!

  # ios '<pod_name>' # This dependency will only be available for iOS
  ios 'StripeTerminal'
  ios 'ZendeskSupportSDK'
  # macos '<pod_name>' # This dependency will only be available for macOS
end

post_install do |installer|
  installer.configure_catalyst
  # Workaround: Drop 32 Bit Architectures
  # =====================================
  #
  installer.pods_project.build_configuration_list.build_configurations.each do |configuration|
    configuration.build_settings['VALID_ARCHS'] = '$(ARCHS_STANDARD_64_BIT)'
  end

  # Let Pods targets inherit deployment target from the app
  # This solution is suggested here: https://github.com/CocoaPods/CocoaPods/issues/4859
  # =====================================
  #
  installer.pods_project.targets.each do |target|
    # Fix bundle targets' 'Signing Certificate' to 'Sign to Run Locally'
    if target.respond_to?(:product_type) && (target.product_type == 'com.apple.product-type.bundle')
      target.build_configurations.each do |config|
        config.build_settings['CODE_SIGN_IDENTITY[sdk=macosx*]'] = '-'
      end
    end
    target.build_configurations.each do |configuration|
      pod_ios_deployment_target = Gem::Version.new(configuration.build_settings['IPHONEOS_DEPLOYMENT_TARGET'])
      configuration.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET' if pod_ios_deployment_target <= app_ios_deployment_target
    end
  end

  # Fix a code signing issue in Xcode 14 beta.
  # This solution is suggested here: https://github.com/CocoaPods/CocoaPods/issues/11402#issuecomment-1189861270
  # ====================================
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['CODE_SIGN_IDENTITY'] = ''
    end
  end
  # rubocop:enable Style/CombinableLoops
end
